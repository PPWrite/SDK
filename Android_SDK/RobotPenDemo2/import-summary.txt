ECLIPSE ANDROID PROJECT IMPORT SUMMARY
======================================

Ignored Files:
--------------
The following files were *not* copied into the new Gradle project; you
should evaluate whether these are still needed in your project and if
so manually move them:

* .DS_Store
* .idea/
* .idea/.name
* .idea/RobotPenDemo.iml
* .idea/compiler.xml
* .idea/copyright/
* .idea/copyright/profiles_settings.xml
* .idea/encodings.xml
* .idea/misc.xml
* .idea/modules.xml
* .idea/workspace.xml
* ic_launcher-web.png
* proguard-project.txt

Moved Files:
------------
Android Gradle projects use a different directory structure than ADT
Eclipse projects. Here's how the projects were restructured:

* AndroidManifest.xml => app/src/main/AndroidManifest.xml
* assets/ => app/src/main/assets
* libs/RobotpenDb.jar => app/libs/RobotpenDb.jar
* libs/RobotpenFile.jar => app/libs/RobotpenFile.jar
* libs/RobotpenModel.jar => app/libs/RobotpenModel.jar
* libs/RobotpenRemote.jar => app/libs/RobotpenRemote.jar
* libs/RobotpenSDK.jar => app/libs/RobotpenSDK.jar
* libs/RobotpenUtil.jar => app/libs/RobotpenUtil.jar
* libs/agora-rtc-sdk.jar => app/libs/agora-rtc-sdk.jar
* libs/android-async-http-1.4.8.jar => app/libs/android-async-http-1.4.8.jar
* libs/armeabi-v7a/libHDACEngine.so => app/src/main/jniLibs/armeabi-v7a/libHDACEngine.so
* libs/armeabi-v7a/libRecordImageUtil.so => app/src/main/jniLibs/armeabi-v7a/libRecordImageUtil.so
* libs/armeabi-v7a/libagora-rtc-sdk-jni.so => app/src/main/jniLibs/armeabi-v7a/libagora-rtc-sdk-jni.so
* libs/armeabi-v7a/libavcodec-56.so => app/src/main/jniLibs/armeabi-v7a/libavcodec-56.so
* libs/armeabi-v7a/libavdevice-56.so => app/src/main/jniLibs/armeabi-v7a/libavdevice-56.so
* libs/armeabi-v7a/libavfilter-5.so => app/src/main/jniLibs/armeabi-v7a/libavfilter-5.so
* libs/armeabi-v7a/libavformat-56.so => app/src/main/jniLibs/armeabi-v7a/libavformat-56.so
* libs/armeabi-v7a/libavutil-54.so => app/src/main/jniLibs/armeabi-v7a/libavutil-54.so
* libs/armeabi-v7a/libbspatch.so => app/src/main/jniLibs/armeabi-v7a/libbspatch.so
* libs/armeabi-v7a/libpostproc-53.so => app/src/main/jniLibs/armeabi-v7a/libpostproc-53.so
* libs/armeabi-v7a/libswresample-1.so => app/src/main/jniLibs/armeabi-v7a/libswresample-1.so
* libs/armeabi-v7a/libswscale-3.so => app/src/main/jniLibs/armeabi-v7a/libswscale-3.so
* libs/crasheye.jar => app/libs/crasheye.jar
* libs/fastjson-1.2.3.jar => app/libs/fastjson-1.2.3.jar
* libs/happy-dns-0.2.9.jar => app/libs/happy-dns-0.2.9.jar
* libs/lz4-1.3.0.jar => app/libs/lz4-1.3.0.jar
* libs/okhttp-3.2.0.jar => app/libs/okhttp-3.2.0.jar
* libs/okio-1.6.0.jar => app/libs/okio-1.6.0.jar
* libs/ons-client-1.2.1.jar => app/libs/ons-client-1.2.1.jar
* libs/org.eclipse.paho.client.mqttv3-1.0.2.jar => app/libs/org.eclipse.paho.client.mqttv3-1.0.2.jar
* libs/qiniu-android-sdk-7.2.1.jar => app/libs/qiniu-android-sdk-7.2.1.jar
* libs/rocketmq-common-3.4.9.jar => app/libs/rocketmq-common-3.4.9.jar
* libs/slf4j-android-1.7.21.jar => app/libs/slf4j-android-1.7.21.jar
* libs/universal-image-loader-1.9.5.jar => app/libs/universal-image-loader-1.9.5.jar
* lint.xml => app/lint.xml
* res/ => app/src/main/res/
* src/ => app/src/main/java/
* src/cn/robotpen/demo/.DS_Store => app/src/main/resources/cn/robotpen/demo/.DS_Store

Next Steps:
-----------
You can now build the project. The Gradle project needs network
connectivity to download dependencies.

Bugs:
-----
If for some reason your project does not build, and you determine that
it is due to a bug or limitation of the Eclipse to Gradle importer,
please file a bug at http://b.android.com with category
Component-Tools.

(This import summary is for your information only, and can be deleted
after import once you are satisfied with the results.)
